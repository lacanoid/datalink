\pset null _null_
SET client_min_messages = notice;
SET search_path = public,datalink;
create table sample_datalinks4 (
  id serial,
  link datalink
);
NOTICE:  DATALINK DDL:TRIGGER on sample_datalinks4
-- select dl_chattr('sample_datalinks4','link', dl_lco(link_control=>'FILE',integrity=>'ALL'));
update datalink.column_options
   set link_control='FILE', integrity='ALL'
 where table_name='sample_datalinks4' and column_name='link';
insert into sample_datalinks4 (link)
values (dlvalue('/etc/passwd','FS','Sample file datalink 1'));
NOTICE:  DATALINK LINK:/etc/passwd
insert into sample_datalinks4 (link)
values (dlvalue('/etc/issue','FS','Sample file datalink 2'));
NOTICE:  DATALINK LINK:/etc/issue
insert into sample_datalinks4 (link)
values (dlvalue('/etc/issue1','FS','Sample file datalink 3'));
ERROR:  datalink exception - referenced file does not exit
DETAIL:  file:///etc/issue1
HINT:  make sure referenced file actually exists
CONTEXT:  PL/pgSQL function dl_ref(datalink,dl_lco,regclass,name) line 26 at RAISE
PL/pgSQL function dl_trigger_table() line 49 at assignment
insert into sample_datalinks4 (link)
values (dlvalue('/etc/hosts','FS','Sample file datalink 4'));
NOTICE:  DATALINK LINK:/etc/hosts
insert into sample_datalinks3 (url,link) select dlurlcompleteonly(link),link from sample_datalinks4;
select state,regclass,attname,path
  from datalink.linked_files;
 state |     regclass      | attname |    path     
-------+-------------------+---------+-------------
 LINK  | sample_datalinks4 | link    | /etc/passwd
 LINK  | sample_datalinks4 | link    | /etc/issue
 LINK  | sample_datalinks4 | link    | /etc/hosts
(3 rows)

delete from sample_datalinks4
 where link->>'token' =
(select token::text
  from datalink.dl_linked_files
 order by txid limit 1);
NOTICE:  DATALINK UNLINK:/etc/passwd
select state,regclass,attname,path
  from datalink.linked_files;
 state |     regclass      | attname |    path    
-------+-------------------+---------+------------
 LINK  | sample_datalinks4 | link    | /etc/issue
 LINK  | sample_datalinks4 | link    | /etc/hosts
(2 rows)

create table sample_datalinks5 (
  id serial,
  link datalink
);
NOTICE:  DATALINK DDL:TRIGGER on sample_datalinks5
-- select dl_chattr('sample_datalinks5','link', dl_lco(link_control=>'FILE',integrity=>'ALL'));
update datalink.column_options
   set link_control='FILE', integrity='ALL'
 where table_name='sample_datalinks5' and column_name='link';
insert into sample_datalinks5 (link)
values (dlvalue('/etc/passwd','FS','Sample file datalink'));
NOTICE:  DATALINK LINK:/etc/passwd
insert into sample_datalinks5 (link)
values (dlvalue('/etc/issue','FS','Sample file datalink'));
NOTICE:  DATALINK LINK:/etc/issue
ERROR:  datalink exception - external file already linked
DETAIL:  from sample_datalinks4.link as '/etc/issue'
CONTEXT:  PL/pgSQL function file_link(file_path,dl_token,dl_lco,regclass,name) line 36 at RAISE
SQL statement "SELECT datalink.file_link(dlurlpathonly(link),(link->>'token')::datalink.dl_token,link_options,regclass,column_name)"
PL/pgSQL function dl_ref(datalink,dl_lco,regclass,name) line 36 at PERFORM
PL/pgSQL function dl_trigger_table() line 49 at assignment
select state,regclass,attname,path
  from datalink.linked_files;
 state |     regclass      | attname |    path     
-------+-------------------+---------+-------------
 LINK  | sample_datalinks4 | link    | /etc/issue
 LINK  | sample_datalinks4 | link    | /etc/hosts
 LINK  | sample_datalinks5 | link    | /etc/passwd
(3 rows)

drop table sample_datalinks5;
NOTICE:  DATALINK UNLINK:/etc/passwd
truncate sample_datalinks4;
NOTICE:  DATALINK UNLINK:/etc/issue
NOTICE:  DATALINK UNLINK:/etc/hosts
insert into sample_datalinks4 (link)
select link
  from sample_datalinks3
 where dllinktype(link)='FS';
NOTICE:  DATALINK LINK:/etc/passwd
NOTICE:  DATALINK LINK:/etc/issue
NOTICE:  DATALINK LINK:/etc/hosts
alter table sample_datalinks4
 drop column link;
NOTICE:  DATALINK UNLINK:/etc/passwd
NOTICE:  DATALINK UNLINK:/etc/issue
NOTICE:  DATALINK UNLINK:/etc/hosts
NOTICE:  DATALINK DDL:TRIGGER on sample_datalinks4
truncate sample_datalinks4;
alter table sample_datalinks4
 add column link datalink;
NOTICE:  DATALINK DDL:TRIGGER on sample_datalinks4
alter table sample_datalinks4
 add column link2 datalink;
-- select dl_chattr('sample_datalinks4','link2',dl_lco(link_control=>'FILE',integrity=>'ALL'));
update datalink.column_options
   set link_control='FILE', integrity='ALL'
 where table_name='sample_datalinks4' and column_name='link2';
insert into sample_datalinks4 (link)
select link
  from sample_datalinks3
 where dllinktype(link)='FS';
update sample_datalinks4 set link2 = link;
NOTICE:  DATALINK LINK:/etc/passwd
NOTICE:  DATALINK LINK:/etc/issue
NOTICE:  DATALINK LINK:/etc/hosts
update sample_datalinks4 set link = link2;
update sample_datalinks4 set link2 = null;
NOTICE:  DATALINK UNLINK:/etc/passwd
NOTICE:  DATALINK UNLINK:/etc/issue
NOTICE:  DATALINK UNLINK:/etc/hosts
update datalink.column_options
   set link_control='FILE', integrity='SELECTIVE', recovery='YES'
 where table_name='sample_datalinks4' and column_name='link2';
ERROR:  datalink exception
DETAIL:  Invalid link control options (10011)
HINT:  see table datalink.link_control_options for valid link control options
CONTEXT:  PL/pgSQL function modlco(regclass,name,dl_lco) line 24 at RAISE
SQL statement "SELECT datalink.modlco(regclass(old.table_name),old.column_name,my_lco)"
PL/pgSQL function dl_trigger_options() line 11 at PERFORM
select * from column_options;
        table_name         | column_name | link_control | integrity | read_access | write_access | recovery | on_unlink 
---------------------------+-------------+--------------+-----------+-------------+--------------+----------+-----------
 datalink.sample_datalinks | link        | FILE         | ALL       | DB          | BLOCKED      | YES      | RESTORE
 sample_datalinks          | link        | NO           | NONE      | FS          | FS           | NO       | NONE
 sample_datalinks2         | link        | FILE         | SELECTIVE | FS          | FS           | NO       | NONE
 sample_datalinks3         | link        | NO           | NONE      | FS          | FS           | NO       | NONE
 sample_datalinks4         | link        | NO           | NONE      | FS          | FS           | NO       | NONE
 sample_datalinks4         | link2       | FILE         | ALL       | FS          | FS           | NO       | NONE
(6 rows)

alter table sample_datalinks4 rename link2 to link3;
select * from column_options where table_name='sample_datalinks4';
    table_name     | column_name | link_control | integrity | read_access | write_access | recovery | on_unlink 
-------------------+-------------+--------------+-----------+-------------+--------------+----------+-----------
 sample_datalinks4 | link        | NO           | NONE      | FS          | FS           | NO       | NONE
 sample_datalinks4 | link3       | FILE         | ALL       | FS          | FS           | NO       | NONE
(2 rows)

update sample_datalinks4 set link3 = link;
NOTICE:  DATALINK LINK:/etc/passwd
NOTICE:  DATALINK LINK:/etc/issue
NOTICE:  DATALINK LINK:/etc/hosts
select * from datalink.linked_files where regclass='sample_datalinks4'::regclass;
    path     | state | read_access | write_access | recovery | on_unlink |     regclass      | attname |  err   
-------------+-------+-------------+--------------+----------+-----------+-------------------+---------+--------
 /etc/passwd | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link3   | _null_
 /etc/issue  | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link3   | _null_
 /etc/hosts  | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link3   | _null_
(3 rows)

alter table sample_datalinks4 rename link3 to link4;
select * from column_options where table_name='sample_datalinks4';
    table_name     | column_name | link_control | integrity | read_access | write_access | recovery | on_unlink 
-------------------+-------------+--------------+-----------+-------------+--------------+----------+-----------
 sample_datalinks4 | link        | NO           | NONE      | FS          | FS           | NO       | NONE
 sample_datalinks4 | link4       | FILE         | ALL       | FS          | FS           | NO       | NONE
(2 rows)

select * from datalink.linked_files where regclass='sample_datalinks4'::regclass;
    path     | state | read_access | write_access | recovery | on_unlink |     regclass      | attname |  err   
-------------+-------+-------------+--------------+----------+-----------+-------------------+---------+--------
 /etc/passwd | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link4   | _null_
 /etc/issue  | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link4   | _null_
 /etc/hosts  | LINK  | FS          | FS           | NO       | NONE      | sample_datalinks4 | link4   | _null_
(3 rows)

alter table sample_datalinks4 drop column link4;
NOTICE:  DATALINK UNLINK:/etc/passwd
NOTICE:  DATALINK UNLINK:/etc/issue
NOTICE:  DATALINK UNLINK:/etc/hosts

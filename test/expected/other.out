\pset null _null_
SET client_min_messages = notice;
SET search_path = public,datalink;
create table sample_urls (
  id serial,
  url text
);
insert into sample_urls (url)
values 
  ('http://www.mozilla.org');
insert into sample_urls (url)
values 
  ('http://www.ljudmila.org'),
  ('https://www.github.org'),
  ('file:///tmp/a');
select * from sample_urls;
 id |           url           
----+-------------------------
  1 | http://www.mozilla.org
  2 | http://www.ljudmila.org
  3 | https://www.github.org
  4 | file:///tmp/a
(4 rows)

create table sample_datalinks (
  url text,
  link datalink
);
NOTICE:  DATALINK DDL: CREATE TRIGGER "~RI_DatalinkTrigger" BEFORE INSERT OR UPDATE OR DELETE ON sample_datalinks FOR EACH ROW EXECUTE PROCEDURE datalink.dl_ri_trigger()
select * from dl_triggers;
 owner |     regclass     | links | mco |       tgname        
-------+------------------+-------+-----+---------------------
 root  | sample_datalinks |     1 |   0 | ~RI_DatalinkTrigger
(1 row)

select column_name,control_options FROM datalink.dl_columns;
 column_name | control_options 
-------------+-----------------
 link        |               0
(1 row)

insert into sample_datalinks (link)
values (dlvalue('http://www.archive.org','URL','Sample datalink'));
NOTICE:  DATALINK: dl_ref('http://www.archive.org',0,sample_datalinks,link)
insert into sample_datalinks (link)
values (dlvalue('http://guthub.org','URL','Another sample datalink'));
NOTICE:  DATALINK: dl_ref('http://guthub.org',0,sample_datalinks,link)
insert into sample_datalinks (url,link)
select url,dlvalue(url) 
  from sample_urls;
NOTICE:  DATALINK: dl_ref('http://www.mozilla.org',0,sample_datalinks,link)
NOTICE:  DATALINK: dl_ref('http://www.ljudmila.org',0,sample_datalinks,link)
NOTICE:  DATALINK: dl_ref('https://www.github.org',0,sample_datalinks,link)
NOTICE:  DATALINK: dl_ref('file:///tmp/a',0,sample_datalinks,link)
update sample_datalinks
   set link = null
 where url like 'file:%';
NOTICE:  DATALINK: dl_unref('file:///tmp/a',0,sample_datalinks,link)
delete from sample_datalinks
 where url like 'https:%';
NOTICE:  DATALINK: dl_unref('https://www.github.org',0,sample_datalinks,link)
 
 
create table sample_datalinks2 (
  id serial,
  link datalink
);
NOTICE:  DATALINK DDL: CREATE TRIGGER "~RI_DatalinkTrigger" BEFORE INSERT OR UPDATE OR DELETE ON sample_datalinks2 FOR EACH ROW EXECUTE PROCEDURE datalink.dl_ri_trigger()
select dl_chattr('public','sample_datalinks2','link', dl_options(link_control=>'FILE'));
 dl_chattr 
-----------
         1
(1 row)

select sql_identifier,control_options FROM datalink.dl_columns;
     sql_identifier     | control_options 
------------------------+-----------------
 sample_datalinks.link  |               0
 sample_datalinks2.link |               1
(2 rows)

insert into sample_datalinks2 (link)
values (dlvalue('http://www.ljudmila.org','URL','Sample datalink'));
NOTICE:  DATALINK: dl_ref('http://www.ljudmila.org',1,sample_datalinks2,link)
insert into sample_datalinks2 (link)
values (dlvalue('/etc/','FS','Sample file datalink'));
NOTICE:  DATALINK: dl_ref('file:///etc/',1,sample_datalinks2,link)
insert into sample_datalinks2 (link)
values (dlvalue('file:///foo+bar/no_file','URL','Sample file datalink 2'));
NOTICE:  DATALINK: dl_ref('file:///foo+bar/no_file',1,sample_datalinks2,link)
ERROR:  Referenced file does not exit
DETAIL:  (file:///foo+bar/no_file,,"Sample file datalink 2")
CONTEXT:  PL/pgSQL function dl_ref(datalink,dl_options,regclass,name) line 16 at RAISE
PL/pgSQL function dl_ri_trigger() line 35 at assignment
select (link).url, (link).token is not null as has_token from sample_datalinks2;
           url           | has_token 
-------------------------+-----------
 http://www.ljudmila.org | t
 file:///etc/            | t
(2 rows)


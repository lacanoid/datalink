\pset null _null_
SET client_min_messages = notice;
SET search_path = public,datalink;
create table sample_datalinks2 (
  id serial,
  link datalink
);
NOTICE:  DATALINK DDL: CREATE TRIGGER "~RI_DatalinkTrigger" BEFORE INSERT OR UPDATE OR DELETE ON sample_datalinks2 FOR EACH ROW EXECUTE PROCEDURE datalink.dl_ri_trigger()
select dl_chattr('public','sample_datalinks2','link', dl_options(link_control=>'FILE'));
 dl_chattr 
-----------
         1
(1 row)

select sql_identifier,control_options FROM datalink.dl_columns;
     sql_identifier     | control_options 
------------------------+-----------------
 sample_datalinks.link  |               0
 sample_datalinks2.link |               1
(2 rows)

insert into sample_datalinks2 (link)
values (dlvalue('http://www.ljudmila.org','URL','Sample datalink'));
NOTICE:  DATALINK: dl_ref('http://www.ljudmila.org',1,sample_datalinks2,link)
insert into sample_datalinks2 (link)
values (dlvalue('/etc/','FS','Sample file datalink'));
NOTICE:  DATALINK: dl_ref('file:///etc/',1,sample_datalinks2,link)
insert into sample_datalinks2 (link)
values (dlvalue('file:///foo+bar/no_file','URL','Sample file datalink 2'));
NOTICE:  DATALINK: dl_ref('file:///foo+bar/no_file',1,sample_datalinks2,link)
ERROR:  Referenced file does not exit
DETAIL:  (file:///foo+bar/no_file,,"Sample file datalink 2")
CONTEXT:  PL/pgSQL function dl_ref(datalink,dl_options,regclass,name) line 16 at RAISE
PL/pgSQL function dl_ri_trigger() line 39 at assignment
select (link).url, (link).token is not null as has_token from sample_datalinks2;
           url           | has_token 
-------------------------+-----------
 http://www.ljudmila.org | t
 file:///etc/            | t
(2 rows)

select dl_chattr('public','sample_datalinks2','link', dl_options(link_control=>'FILE'));
ERROR:  Can't change link control options; 2 non-null values present in column "link"
CONTEXT:  PL/pgSQL function dl_chattr(name,name,name,dl_options) line 22 at RAISE
create table sample_datalinks3
    as 
select *
  from sample_datalinks;
NOTICE:  DATALINK DDL: CREATE TRIGGER "~RI_DatalinkTrigger" BEFORE INSERT OR UPDATE OR DELETE ON sample_datalinks3 FOR EACH ROW EXECUTE PROCEDURE datalink.dl_ri_trigger()

\pset null _null_
SET client_min_messages = notice;
SET search_path = public,datalink;
create table sample_urls (
  id serial,
  url text
);
select dlurlserver(dlvalue('file:///etc/issue'));
 dlurlserver 
-------------
 _null_
(1 row)

select dlurlserver(dlvalue('file://server1/etc/issue'));
 dlurlserver 
-------------
 server1
(1 row)

select dlurlscheme(dlvalue('FiLe://SeRvEr1/EtC/IsSuE'));
 dlurlscheme 
-------------
 FILE
(1 row)

select dlurlserver(dlvalue('FiLe://SeRvEr1/EtC/IsSuE'));
 dlurlserver 
-------------
 server1
(1 row)

select dlurlpath(dlvalue('FiLe://SeRvEr1/EtC/IsSuE'));
 dlurlpath  
------------
 /EtC/IsSuE
(1 row)

select dlvalue('/tmp/test-_=!@$^&()[]{}#?','FS');
                              dlvalue                              
-------------------------------------------------------------------
 {"a": "file:/tmp/test-_%3D%21%40%24%5E%26%28%29%5B%5D%7B%7D#%3F"}
(1 row)

select dlurlpath(dlvalue('/tmp/test-_=!@$^&()[]{}#?','FS'));
         dlurlpath         
---------------------------
 /tmp/test-_=!@$^&()[]{}#?
(1 row)

select dlurlcomplete(dlvalue('/tmp/test-_=!@$^&()[]{}#?','FS'));
                      dlurlcomplete                       
----------------------------------------------------------
 file:/tmp/test-_%3D%21%40%24%5E%26%28%29%5B%5D%7B%7D#%3F
(1 row)

insert into sample_urls (url)
values 
  ('http://www.mozilla.org');
insert into sample_urls (url)
values 
  ('http://www.ljudmila.org'),
  ('https://www.github.org'),
  ('file:///tmp/a'),
  ('http://www.debian.org/');
select * from sample_urls;
 id |           url           
----+-------------------------
  1 | http://www.mozilla.org
  2 | http://www.ljudmila.org
  3 | https://www.github.org
  4 | file:///tmp/a
  5 | http://www.debian.org/
(5 rows)

---------------------
create table sample_files (
  id serial,
  filename datalink.file_path
);
insert into sample_files (filename)
values 
  ('/var/www/datalink/test1.txt'),
  ('/var/www/datalink/test2.txt'),
  ('/var/www/datalink/test3.txt#11111111-2222-3333-4444-abecedabeced'),
  ('/var/www/datalink/testX.txt'),
  ('/var/www/datalink/CHANGELOG.md');
select *,dlvalue(filename) from sample_files;
 id |                             filename                             |                                    dlvalue                                     
----+------------------------------------------------------------------+--------------------------------------------------------------------------------
  1 | /var/www/datalink/test1.txt                                      | {"a": "file:/var/www/datalink/test1.txt"}
  2 | /var/www/datalink/test2.txt                                      | {"a": "file:/var/www/datalink/test2.txt"}
  3 | /var/www/datalink/test3.txt#11111111-2222-3333-4444-abecedabeced | {"a": "file:/var/www/datalink/test3.txt#11111111-2222-3333-4444-abecedabeced"}
  4 | /var/www/datalink/testX.txt                                      | {"a": "file:/var/www/datalink/testX.txt"}
  5 | /var/www/datalink/CHANGELOG.md                                   | {"a": "file:/var/www/datalink/CHANGELOG.md"}
(5 rows)

---------------------
create table sample_datalinks (
  url text,
  link datalink
);
--select * from dl_triggers;
--select column_name,lco FROM datalink.dl_columns;
--select * from datalink.columns;
insert into sample_datalinks (link)
values (dlvalue('http://www.archive.org','URL','Sample datalink'));
insert into sample_datalinks (link)
values (dlvalue('http://guthub.org','URL','Another sample datalink'));
insert into sample_datalinks (url,link)
select url,dlvalue(url) 
  from sample_urls;
update sample_datalinks
   set link = null
 where url like 'file:%';
update sample_datalinks
   set link = null
 where url like '%debian.org%';
delete from sample_datalinks
 where url like 'https:%';
 
update sample_datalinks
   set link = dlvalue(url)
 where link is null and url is not null;
-- check for some exceptions from the SQL standard
create table med (link datalink(2)); -- INTEGRITY ALL
NOTICE:  DATALINK DDL:TRIGGER on med
-- 15.2 Effect of inserting rows into base tables
-- case 1.a.1 referenced file does not exist
insert into med (link) values (dlvalue('file:///var/www/datalink/non_existant_file')); -- err
ERROR:  DATALINK EXCEPTION - referenced file does not exist
URL:  file:/var/www/datalink/non_existant_file
DETAIL:  CURL error 37 - Couldn't read a file:// file
HINT:  make sure URL is correct and referenced file actually exists
CONTEXT:  PL/pgSQL function dl_datalink_ref(datalink,dl_lco,regclass,name) line 55 at RAISE
PL/pgSQL function dl_trigger_table() line 94 at assignment
-- 
-- case 1.b.1 invalid datalink construction
insert into med (link) values (dlpreviouscopy('file:///var/www/datalink/test1.txt')); -- err
ERROR:  DATALINK EXCEPTION - invalid datalink construction
DETAIL:  DLPREVIOUSCOPY and DLNEWCOPY are not permitted in INSERT
CONTEXT:  PL/pgSQL function dl_trigger_table() line 56 at RAISE
insert into med (link) values (dlnewcopy('file:///var/www/datalink/test1.txt')); -- err
ERROR:  DATALINK EXCEPTION - invalid datalink construction
DETAIL:  DLPREVIOUSCOPY and DLNEWCOPY are not permitted in INSERT
CONTEXT:  PL/pgSQL function dl_trigger_table() line 56 at RAISE
insert into med (link) values (dlvalue('file:///var/www/datalink/test1.txt')); -- ok
NOTICE:  DATALINK LINK:/var/www/datalink/test1.txt
-- 
-- case 1.b.2 external file already linked
insert into med (link) values (dlvalue('file:///var/www/datalink/test1.txt')); -- err
NOTICE:  DATALINK LINK:/var/www/datalink/test1.txt
ERROR:  DATALINK EXCEPTION - external file already linked
DETAIL:  from med.link as '/var/www/datalink/test1.txt'
CONTEXT:  PL/pgSQL function dl_file_link(file_path,dl_token,"char",dl_lco,regclass,name) line 82 at RAISE
SQL statement "SELECT datalink.dl_file_link(my_path,my_token,cons,link_options,regclass,column_name)"
PL/pgSQL function dl_datalink_ref(datalink,dl_lco,regclass,name) line 91 at PERFORM
PL/pgSQL function dl_trigger_table() line 94 at assignment
-- 15.3 Effect of replacing rows in base tables
update med set link = dlvalue('file:///var/www/datalink/test2.txt'); -- ok
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
NOTICE:  DATALINK LINK:/var/www/datalink/test2.txt
--
-- case 1.b.i.1 referenced file does not exist
update med set link = dlvalue('file:///var/www/datalink/non_existant_file'); -- err
NOTICE:  DATALINK UNLINK:/var/www/datalink/test2.txt
ERROR:  DATALINK EXCEPTION - referenced file does not exist
URL:  file:/var/www/datalink/non_existant_file
DETAIL:  CURL error 37 - Couldn't read a file:// file
HINT:  make sure URL is correct and referenced file actually exists
CONTEXT:  PL/pgSQL function dl_datalink_ref(datalink,dl_lco,regclass,name) line 55 at RAISE
PL/pgSQL function dl_trigger_table() line 94 at assignment
--
-- case 1.b.ii.1 external file already linked
insert into med (link) values (dlvalue('file:///var/www/datalink/test1.txt')); -- ok
NOTICE:  DATALINK LINK:/var/www/datalink/test1.txt
update med set link = dlvalue('file:///var/www/datalink/test4.txt'); -- err
NOTICE:  DATALINK UNLINK:/var/www/datalink/test2.txt
NOTICE:  DATALINK LINK:/var/www/datalink/test4.txt
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
NOTICE:  DATALINK LINK:/var/www/datalink/test4.txt
ERROR:  DATALINK EXCEPTION - external file already linked
DETAIL:  from med.link as '/var/www/datalink/test4.txt'
CONTEXT:  PL/pgSQL function dl_file_link(file_path,dl_token,"char",dl_lco,regclass,name) line 82 at RAISE
SQL statement "SELECT datalink.dl_file_link(my_path,my_token,cons,link_options,regclass,column_name)"
PL/pgSQL function dl_datalink_ref(datalink,dl_lco,regclass,name) line 91 at PERFORM
PL/pgSQL function dl_trigger_table() line 94 at assignment
delete from med;
NOTICE:  DATALINK UNLINK:/var/www/datalink/test2.txt
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
--
-- case 1.b.ii.2.A.I invalid write token
update datalink.columns set read_access='DB',write_access='TOKEN' where table_name='med';
insert into med (link) values (dlvalue('file:///var/www/datalink/test1.txt')); -- ok
WARNING:  DATALINK WARNING - datalinker recommended
HINT:  Make sure pg_datalinker process is running to finalize your commits.
NOTICE:  DATALINK LINK:/var/www/datalink/test1.txt
update med set link = dlnewcopy('file:///var/www/datalink/test1.txt'); -- err
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
ERROR:  DATALINK EXCEPTION - invalid write token
DETAIL:  New value doesn't contain a matching write token for update of column med.link
HINT:  Supply value with valid write token (DLNEWCOPY) or set write_access to ADMIN
CONTEXT:  PL/pgSQL function dl_trigger_table() line 74 at RAISE
update med set link = dlnewcopy(link); -- ok
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
WARNING:  DATALINK WARNING - datalinker recommended
HINT:  Make sure pg_datalinker process is running to finalize your commits.
NOTICE:  DATALINK LINK:/var/www/datalink/test1.txt
--
-- case 1.b.ii.2.B invalid write permission for update
update datalink.columns set read_access='DB',write_access='BLOCKED' where table_name='med';
update med set link = dlnewcopy('file:///var/www/datalink/test2.txt'); -- err
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
ERROR:  DATALINK EXCEPTION - invalid write permission for update
DETAIL:  write access is BLOCKED for column med.link
HINT:  set write_access to ADMIN or TOKEN
CONTEXT:  PL/pgSQL function dl_trigger_table() line 65 at RAISE
--
-- case 1.b.ii.2.C referenced file not valid
update datalink.columns set read_access='DB',write_access='ADMIN' where table_name='med';
update med set link = dlnewcopy('file:///var/www/datalink/test2.txt'); -- err
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
ERROR:  DATALINK EXCEPTION - referenced file not valid
DETAIL:  File address is different for for update of column med.link
CONTEXT:  PL/pgSQL function dl_trigger_table() line 82 at RAISE
update med set link = dlvalue('file:///var/www/datalink/test2.txt'); -- ok
NOTICE:  DATALINK UNLINK:/var/www/datalink/test1.txt
WARNING:  DATALINK WARNING - datalinker recommended
HINT:  Make sure pg_datalinker process is running to finalize your commits.
NOTICE:  DATALINK LINK:/var/www/datalink/test2.txt
update med set link = dlnewcopy('file:///var/www/datalink/test2.txt'); -- ok
NOTICE:  DATALINK UNLINK:/var/www/datalink/test2.txt
WARNING:  DATALINK WARNING - datalinker recommended
HINT:  Make sure pg_datalinker process is running to finalize your commits.
NOTICE:  DATALINK LINK:/var/www/datalink/test2.txt
drop table med;
NOTICE:  DATALINK UNLINK:/var/www/datalink/test2.txt
